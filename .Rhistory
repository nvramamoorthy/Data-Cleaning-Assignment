columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
mean[i] <- mean(y[, i])
}
means
}
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
mean[i] <- mean(y[, i])
}
means
}
coloummean(air)
colummean(air)
columnmean(air)
air <- hw1_data.csv
air <- read.csv("/Users/siddharth/Desktop/Data-Scientist/hw1_data.csv")
air
columnmean
columnmean(y)
columnmean(air)
column
columnmean
air
columnmean(air)
colummean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
s
columnmean(air)
colummean
air
colummean(air)
colummean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
columnmean(air)
colummean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
columnmean(air)
colummean
colummean(air)
columnmean(air, FALSE)
colummean(air)
colummean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
air
columnmean(air)
colummean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
columnmean(air)
f <- function(a, b) {
a^3
}
f(6)
f <- function(a, b) {
3*a + b*100
}
f(2,3)
f(9,70)
ls
x <- as.date("1970-01-01")
x <- as.Date("1970-01-01")
x
unclass(x)
Sys.time()
Sys.time()
Sys.time()
Sys.time()
p <- as.POSIXlt(Sys.time())
p
names(unclass(p))
names(unclass(x))
dir
source("rankhospital.R")
install.packages("swirl")
install.packages("swirl")
setwd("~/Desktop/Data-Scientist/DataCleaning/Data-Cleaning-Assignment")
getwd()
getwd()
Working Directory >
trainData <- read.table("./UCI-HAR-Dataset/train/X_train.txt")
dim(trainData)
head(trainData)
trainLabel <- read.table("./UCI-HAR-Dataset/train/y_train.txt")
table(trainLabel)
#2. Extracts only the measurements on the mean and standard deviation for each measurement.
getwd()
testSubject <- read.table("./UCI-HAR-Dataset/test/subject_test.txt")
joinData <- rbind(trainData, testData)
joinLabel <- rbind(trainLabel, testLabel)
joinSubject <- rbind(trainSubject, testSubject)
#2. Extracts only the measurements on the mean and standard deviation for each measurement.
features <- read.table("./UCI-HAR-Dataset/features.txt")
meanStdIndices <- grep("mean\\(\\)|std\\(\\)", features[, 2])
length(meanStdIndices) # 66
joinData <- joinData[, meanStdIndices]
names(joinData) <- gsub("\\(\\)", "", features[meanStdIndices, 2]) # remove "()"
trainData <- read.table("./UCI-HAR-Dataset/train/X_train.txt")
trainLabel <- read.table("./UCI-HAR-Dataset/train/y_train.txt")
trainSubject <- read.table("./UCI-HAR-Dataset/train/subject_train.txt")
table(trainLabel)testData <- read.table("./UCI-HAR-Dataset/test/X_test.txt")
testData <- read.table("./UCI-HAR-Dataset/test/X_test.txt")
testLabel <- read.table("./UCI-HAR-Dataset/test/y_test.txt")
table(testLabel)
testSubject <- read.table("./UCI-HAR-Dataset/test/subject_test.txt")
joinData <- rbind(trainData, testData)
joinLabel <- rbind(trainLabel, testLabel)
joinSubject <- rbind(trainSubject, testSubject)
#2. Extracts only the measurements on the mean and standard deviation for each measurement.
features <- read.table("./UCI-HAR-Dataset/features.txt")
length(meanStdIndices) # 66
meanStdIndices <- grep("mean\\(\\)|std\\(\\)", features[, 2])
joinData <- joinData[, meanStdIndices]
names(joinData) <- gsub("\\(\\)", "", features[meanStdIndices, 2]) # remove "()"
#setwd("~/Desktop/Data-Scientist/DataCleaning/Data-Cleaning-Assignment")
#1. Merges the training and the test sets to create one data set.
trainData <- read.table("./UCI-HAR-Dataset/train/X_train.txt")
trainLabel <- read.table("./UCI-HAR-Dataset/train/y_train.txt")
trainSubject <- read.table("./UCI-HAR-Dataset/train/subject_train.txt")
table(trainLabel)testData <- read.table("./UCI-HAR-Dataset/test/X_test.txt")
#setwd("~/Desktop/Data-Scientist/DataCleaning/Data-Cleaning-Assignment")
#1. Merges the training and the test sets to create one data set.
trainData <- read.table("./UCI-HAR-Dataset/train/X_train.txt")
trainLabel <- read.table("./UCI-HAR-Dataset/train/y_train.txt")
trainSubject <- read.table("./UCI-HAR-Dataset/train/subject_train.txt")
table(trainLabel)
testData <- read.table("./UCI-HAR-Dataset/test/X_test.txt")
testData <- read.table("./UCI-HAR-Dataset/test/X_test.txt")
testLabel <- read.table("./UCI-HAR-Dataset/test/y_test.txt")
table(testLabel)
testSubject <- read.table("./UCI-HAR-Dataset/test/subject_test.txt")
joinData <- rbind(trainData, testData)
joinLabel <- rbind(trainLabel, testLabel)
joinSubject <- rbind(trainSubject, testSubject)
#2. Extracts only the measurements on the mean and standard deviation for each measurement.
features <- read.table("./UCI-HAR-Dataset/features.txt")
meanStdIndices <- grep("mean\\(\\)|std\\(\\)", features[, 2])
length(meanStdIndices) # 66
joinData <- joinData[, meanStdIndices]
names(joinData) <- gsub("\\(\\)", "", features[meanStdIndices, 2]) # remove "()"
names(joinData) <- gsub("mean", "Mean", names(joinData)) # capitalize M
names(joinData) <- gsub("std", "Std", names(joinData)) # capitalize S
names(joinData) <- gsub("-", "", names(joinData)) # remove "-" in column names
#3. Uses descriptive activity names to name the activities in the data set
activity <- read.table("./UCI-HAR-Dataset/activity_labels.txt")
activity[, 2] <- tolower(gsub("_", "", activity[, 2]))
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8))
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8))
activityLabel <- activity[joinLabel[, 1], 2]
joinLabel[, 1] <- activityLabel
names(joinLabel) <- "activity"
#4. Appropriately labels the data set with descriptive activity names.
names(joinSubject) <- "subject"
cleanedData <- cbind(joinSubject, joinLabel, joinData)
write.table(cleanedData, "mergedData.txt") # write out the 1st dataset
#5. Creates a second, independent tidy data set with the average of each variable for each activity and each subject.
subjectLen <- length(table(joinSubject)) # 30
activityLen <- dim(activity)[1] # 6
columnLen <- dim(cleanedData)[2]
result <- matrix(NA, nrow=subjectLen*activityLen, ncol=columnLen)
result <- as.data.frame(result)
colnames(result) <- colnames(cleanedData)
row <- 1
for(i in 1:subjectLen) {
for(j in 1:activityLen) {
result[row, 1] <- sort(unique(joinSubject)[, 1])[i]
result[row, 2] <- activity[j, 2]
bool1 <- i == cleanedData$subject
bool2 <- activity[j, 2] == cleanedData$activity
result[row, 3:columnLen] <- colMeans(cleanedData[bool1&bool2, 3:columnLen])
row <- row + 1
}
}
head(result)
write.table(result, "dataWithMeans.txt") # write out the 2nd dataset
#setwd("~/Desktop/Data-Scientist/DataCleaning/Data-Cleaning-Assignment")
#1. Merges the training and the test sets to create one data set.
trainData <- read.table("./UCI-HAR-Dataset/train/X_train.txt")
trainLabel <- read.table("./UCI-HAR-Dataset/train/y_train.txt")
trainSubject <- read.table("./UCI-HAR-Dataset/train/subject_train.txt")
table(trainLabel)
testData <- read.table("./UCI-HAR-Dataset/test/X_test.txt")
testData <- read.table("./UCI-HAR-Dataset/test/X_test.txt")
testLabel <- read.table("./UCI-HAR-Dataset/test/y_test.txt")
testSubject <- read.table("./UCI-HAR-Dataset/test/subject_test.txt")
joinLabel <- rbind(trainLabel, testLabel)
joinSubject <- rbind(trainSubject, testSubject)
features <- read.table("./UCI-HAR-Dataset/features.txt")
length(meanStdIndices) # 66
names(joinData) <- gsub("\\(\\)", "", features[meanStdIndices, 2]) # remove "()"
names(joinData) <- gsub("std", "Std", names(joinData)) # capitalize S
#3. Uses descriptive activity names to name the activities in the data set
activity[, 2] <- tolower(gsub("_", "", activity[, 2]))
joinData <- rbind(trainData, testData)
activityLabel <- activity[joinLabel[, 1], 2]
names(joinLabel) <- "activity"
names(joinSubject) <- "subject"
write.table(cleanedData, "mergedData.txt") # write out the 1st dataset
subjectLen <- length(table(joinSubject)) # 30
columnLen <- dim(cleanedData)[2]
result <- matrix(NA, nrow=subjectLen*activityLen, ncol=columnLen)
colnames(result) <- colnames(cleanedData)
for(i in 1:subjectLen) {
result[row, 1] <- sort(unique(joinSubject)[, 1])[i]
bool1 <- i == cleanedData$subject
result[row, 3:columnLen] <- colMeans(cleanedData[bool1&bool2, 3:columnLen])
}
head(result)
#2. Extracts only the measurements on the mean and standard deviation for each measurement.
joinData <- joinData[, meanStdIndices]
names(joinData) <- gsub("-", "", names(joinData)) # remove "-" in column names
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8))
joinLabel[, 1] <- activityLabel
cleanedData <- cbind(joinSubject, joinLabel, joinData)
activityLen <- dim(activity)[1] # 6
result <- as.data.frame(result)
for(j in 1:activityLen) {
bool2 <- activity[j, 2] == cleanedData$activity
}
names(joinData) <- gsub("mean", "Mean", names(joinData)) # capitalize M
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8))
#5. Creates a second, independent tidy data set with the average of each variable for each activity and each subject.
result[row, 2] <- activity[j, 2]
write.table(result, "dataWithMeans.txt") # write out the 2nd dataset
meanStdIndices <- grep("mean\\(\\)|std\\(\\)", features[, 2])
#4. Appropriately labels the data set with descriptive activity names.
row <- 1
activity <- read.table("./UCI-HAR-Dataset/activity_labels.txt")
row <- row + 1
table(testLabel)
#setwd("~/Desktop/Data-Scientist/DataCleaning/Data-Cleaning-Assignment")
#1. Merges the training and the test sets to create one data set.
trainData <- read.table("./UCI-HAR-Dataset/train/X_train.txt")
trainLabel <- read.table("./UCI-HAR-Dataset/train/y_train.txt")
trainSubject <- read.table("./UCI-HAR-Dataset/train/subject_train.txt")
table(trainLabel)
testData <- read.table("./UCI-HAR-Dataset/test/X_test.txt")
testData <- read.table("./UCI-HAR-Dataset/test/X_test.txt")
testLabel <- read.table("./UCI-HAR-Dataset/test/y_test.txt")
table(testLabel)
testSubject <- read.table("./UCI-HAR-Dataset/test/subject_test.txt")
joinData <- rbind(trainData, testData)
joinLabel <- rbind(trainLabel, testLabel)
joinSubject <- rbind(trainSubject, testSubject)
#2. Extracts only the measurements on the mean and standard deviation for each measurement.
features <- read.table("./UCI-HAR-Dataset/features.txt")
meanStdIndices <- grep("mean\\(\\)|std\\(\\)", features[, 2])
#Test content of meanStdIndices
length(meanStdIndices)
joinData <- joinData[, meanStdIndices]
names(joinData) <- gsub("\\(\\)", "", features[meanStdIndices, 2]) # remove "()"
names(joinData) <- gsub("mean", "Mean", names(joinData)) # capitalize M
names(joinData) <- gsub("std", "Std", names(joinData)) # capitalize S
names(joinData) <- gsub("-", "", names(joinData)) # remove "-" in column names
#3. Uses descriptive activity names to name the activities in the data set
activity <- read.table("./UCI-HAR-Dataset/activity_labels.txt")
activity[, 2] <- tolower(gsub("_", "", activity[, 2]))
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8))
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8))
activityLabel <- activity[joinLabel[, 1], 2]
joinLabel[, 1] <- activityLabel
names(joinLabel) <- "activity"
#4. Appropriately labels the data set with descriptive activity names.
names(joinSubject) <- "subject"
cleanedData <- cbind(joinSubject, joinLabel, joinData)
# write out the Merged dataset
write.table(cleanedData, "mergedData.txt")
#5. Creates a second, independent tidy data set with the average of each variable for each activity and each subject.
subjectLen <- length(table(joinSubject)) # 30
activityLen <- dim(activity)[1] # 6
columnLen <- dim(cleanedData)[2]
result <- matrix(NA, nrow=subjectLen*activityLen, ncol=columnLen)
result <- as.data.frame(result)
colnames(result) <- colnames(cleanedData)
row <- 1
for(i in 1:subjectLen) {
for(j in 1:activityLen) {
result[row, 1] <- sort(unique(joinSubject)[, 1])[i]
result[row, 2] <- activity[j, 2]
bool1 <- i == cleanedData$subject
bool2 <- activity[j, 2] == cleanedData$activity
result[row, 3:columnLen] <- colMeans(cleanedData[bool1&bool2, 3:columnLen])
row <- row + 1
}
}
#Test output
head(result)
# write out the Tidy Dataset file.
write.table(result, "tidyDataWithMeans.txt")
#setwd("~/Desktop/Data-Scientist/DataCleaning/Data-Cleaning-Assignment")
#1. Merges the training and the test sets to create one data set.
trainData <- read.table("./UCI-HAR-Dataset/train/X_train.txt")
trainLabel <- read.table("./UCI-HAR-Dataset/train/y_train.txt")
trainSubject <- read.table("./UCI-HAR-Dataset/train/subject_train.txt")
table(trainLabel)
testData <- read.table("./UCI-HAR-Dataset/test/X_test.txt")
testLabel <- read.table("./UCI-HAR-Dataset/test/y_test.txt")
table(testLabel)
joinData <- rbind(trainData, testData)
joinSubject <- rbind(trainSubject, testSubject)
features <- read.table("./UCI-HAR-Dataset/features.txt")
testSubject <- read.table("./UCI-HAR-Dataset/test/subject_test.txt")
length(meanStdIndices)
names(joinData) <- gsub("\\(\\)", "", features[meanStdIndices, 2]) # remove "()"
names(joinData) <- gsub("std", "Std", names(joinData)) # capitalize S
#3. Uses descriptive activity names to name the activities in the data set
activity[, 2] <- tolower(gsub("_", "", activity[, 2]))
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8))
joinLabel[, 1] <- activityLabel
joinLabel <- rbind(trainLabel, testLabel)
names(joinSubject) <- "subject"
# write out the Merged dataset
#5. Creates a second, independent tidy data set with the average of each variable for each activity and each subject.
activityLen <- dim(activity)[1] # 6
result <- matrix(NA, nrow=subjectLen*activityLen, ncol=columnLen)
colnames(result) <- colnames(cleanedData)
for(i in 1:subjectLen) {
result[row, 1] <- sort(unique(joinSubject)[, 1])[i]
bool1 <- i == cleanedData$subject
#2. Extracts only the measurements on the mean and standard deviation for each measurement.
row <- row + 1
}
head(result)
write.table(result, "tidyDataWithMeans.txt")
#Test content of meanStdIndices
names(joinData) <- gsub("mean", "Mean", names(joinData)) # capitalize M
activity <- read.table("./UCI-HAR-Dataset/activity_labels.txt")
activityLabel <- activity[joinLabel[, 1], 2]
#4. Appropriately labels the data set with descriptive activity names.
write.table(cleanedData, "mergedData.txt")
columnLen <- dim(cleanedData)[2]
row <- 1
result[row, 2] <- activity[j, 2]
result[row, 3:columnLen] <- colMeans(cleanedData[bool1&bool2, 3:columnLen])
#Test output
meanStdIndices <- grep("mean\\(\\)|std\\(\\)", features[, 2])
names(joinData) <- gsub("-", "", names(joinData)) # remove "-" in column names
names(joinLabel) <- "activity"
subjectLen <- length(table(joinSubject)) # 30
result <- as.data.frame(result)
bool2 <- activity[j, 2] == cleanedData$activity
# write out the Tidy Dataset file.
joinData <- joinData[, meanStdIndices]
cleanedData <- cbind(joinSubject, joinLabel, joinData)
for(j in 1:activityLen) {
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8))
}
#setwd("~/Desktop/Data-Scientist/DataCleaning/Data-Cleaning-Assignment")
#1. Merges the training and the test sets to create one data set.
trainData <- read.table("./UCI-HAR-Dataset/train/X_train.txt")
trainLabel <- read.table("./UCI-HAR-Dataset/train/y_train.txt")
trainSubject <- read.table("./UCI-HAR-Dataset/train/subject_train.txt")
table(trainLabel)
testData <- read.table("./UCI-HAR-Dataset/test/X_test.txt")
testLabel <- read.table("./UCI-HAR-Dataset/test/y_test.txt")
table(testLabel)
testSubject <- read.table("./UCI-HAR-Dataset/test/subject_test.txt")
joinData <- rbind(trainData, testData)
joinLabel <- rbind(trainLabel, testLabel)
joinSubject <- rbind(trainSubject, testSubject)
#2. Extracts only the measurements on the mean and standard deviation for each measurement.
features <- read.table("./UCI-HAR-Dataset/features.txt")
meanStdIndices <- grep("mean\\(\\)|std\\(\\)", features[, 2])
#Test content of meanStdIndices
length(meanStdIndices)
joinData <- joinData[, meanStdIndices]
names(joinData) <- gsub("\\(\\)", "", features[meanStdIndices, 2]) # remove "()"
names(joinData) <- gsub("mean", "Mean", names(joinData)) # capitalize M
names(joinData) <- gsub("std", "Std", names(joinData)) # capitalize S
names(joinData) <- gsub("-", "", names(joinData)) # remove "-" in column names
#3. Uses descriptive activity names to name the activities in the data set
activity <- read.table("./UCI-HAR-Dataset/activity_labels.txt")
activity[, 2] <- tolower(gsub("_", "", activity[, 2]))
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8))
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8))
activityLabel <- activity[joinLabel[, 1], 2]
joinLabel[, 1] <- activityLabel
names(joinLabel) <- "activity"
#4. Appropriately labels the data set with descriptive activity names.
names(joinSubject) <- "subject"
cleanedData <- cbind(joinSubject, joinLabel, joinData)
# write out the Merged dataset
write.table(cleanedData, "mergedData.txt")
#5. Creates a second, independent tidy data set with the average of each variable for each activity and each subject.
subjectLen <- length(table(joinSubject)) # 30
activityLen <- dim(activity)[1] # 6
columnLen <- dim(cleanedData)[2]
result <- matrix(NA, nrow=subjectLen*activityLen, ncol=columnLen)
result <- as.data.frame(result)
colnames(result) <- colnames(cleanedData)
row <- 1
for(i in 1:subjectLen) {
for(j in 1:activityLen) {
result[row, 1] <- sort(unique(joinSubject)[, 1])[i]
result[row, 2] <- activity[j, 2]
bool1 <- i == cleanedData$subject
bool2 <- activity[j, 2] == cleanedData$activity
result[row, 3:columnLen] <- colMeans(cleanedData[bool1&bool2, 3:columnLen])
row <- row + 1
}
}
#Test output
head(result)
# write out the Tidy Dataset file.
write.table(result, "tidyDataWithMeans.txt", row.name=FALSE)
